{"version":3,"sources":["main.js","log.js","segmentation.js","LogstatsQuery.js","LogstatsDataConverter.js","LogstatsGraphDrawer.js","userManagement.js","project.js"],"names":[],"mappingsthxeA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["$(document).ready(function() {\r\n\r\n\tfunction set_daterange(start, end) {\r\n\t\tvar label = start.format('DD MMMM YYYY, HH:mm:ss');\r\n\t\tlabel += ' - ' + end.format('DD MMMM YYYY, HH:mm:ss');\r\n\t\t$('div#daterange label').html(label);\r\n\t}\r\n\r\n\r\n\r\n\tfunction moment_as_default_timezone_to_UTC_timestamp(time) {\r\n\t\tvar offset = moment().tz(timezone).utcOffset() - time.utcOffset();\r\n\t\treturn time.unix() - offset * 60;\r\n\t}\r\n\r\n\tvar timezone = $(\"#data-holder\").attr(\"data-timezone\");\r\n\tvar currentTimestamp = Date.now();\r\n\t$('.daterange input[name=from]').val(moment.tz(currentTimestamp,timezone).subtract(1, 'hour').unix());\r\n\t$('.daterange input[name=to]').val(moment.tz(currentTimestamp,timezone).unix());\r\n\t$('div#daterange').daterangepicker({\r\n\t\t\"timePicker\": true,\r\n\t\t\"timePicker24Hour\": true,\r\n\t\t\"startDate\": moment.tz(currentTimestamp,timezone).subtract(1, 'hour'),\r\n\t\t\"endDate\": moment.tz(currentTimestamp,timezone),\r\n\t\t\"opens\" : \"left\",\r\n\t\tranges: {\r\n\t\t\t'Today': [moment.tz(currentTimestamp,timezone).startOf('day'), moment.tz(currentTimestamp,timezone)],\r\n\t\t\t'Yesterday': [moment.tz(currentTimestamp,timezone).subtract(1, 'days').startOf('day'), moment.tz(currentTimestamp,timezone).subtract(1, 'days').endOf('day')],\r\n\t\t\t'Last 20 Minutes': [moment.tz(currentTimestamp,timezone).subtract(20, 'minutes'), moment.tz(currentTimestamp,timezone)],\r\n\t\t\t'Last Hour': [moment.tz(currentTimestamp,timezone).subtract(1, 'hours'), moment.tz(currentTimestamp,timezone)],\r\n\t\t\t'Last 24 Hours': [moment.tz(currentTimestamp,timezone).subtract(24, 'hours'), moment.tz(currentTimestamp,timezone)],\r\n\t\t\t'Last 7 Days': [moment.tz(currentTimestamp,timezone).subtract(7, 'days'), moment.tz(currentTimestamp,timezone)],\r\n\t\t\t'Last 14 Days': [moment.tz(currentTimestamp,timezone).subtract(14, 'days'), moment.tz(currentTimestamp,timezone)],\r\n\t\t\t'Last 30 Days': [moment.tz(currentTimestamp,timezone).subtract(30, 'days'), moment.tz(currentTimestamp,timezone)]\r\n\t\t}\r\n\t}, function(start,end,label) {\r\n\t\tif (label == \"Custom Range\") {\r\n\t\t\t$('input[name=from]').val(moment_as_default_timezone_to_UTC_timestamp(start));\r\n\t\t\t$('input[name=to]').val(moment_as_default_timezone_to_UTC_timestamp(end));\r\n\t\t\tset_daterange(start, end)\r\n\t\t} else {\r\n\t\t\t$('input[name=from]').val(start.unix());\r\n\t\t\t$('input[name=to]').val(end.unix());\r\n\t\t\tset_daterange(start.tz(timezone), end.tz(timezone));\r\n\t\t}\r\n\t});\r\n\r\n\r\n\r\n\tset_daterange(moment().tz(timezone).subtract(1, 'hour'), moment().tz(timezone));\r\n\r\n\r\n\t$(\".nav-tabs li\").click(function() {\r\n\t\t$(\".nav-tabs li\").removeClass(\"active\");\r\n\t\t$(this).addClass(\"active\");\r\n\t\t$(\".tab-div\").hide();\r\n\t\tvar id = $(this).attr('data-id');\r\n\t\t$(\"#\"+id).show();\r\n\t});\r\n\r\n\t$(\".submitable-link\").click(function() {\r\n\t\tvar formId = $(this).attr('target-form-id');\r\n\t\tif (formId) {\r\n\t\t\t$('#'+formId).submit();\r\n\t\t} else {\r\n\t\t\t$(this).closest('form').submit();\r\n\t\t}\r\n\t})\r\n\r\n});\r\n\r\ntimezoneJS.timezone.zoneFileBasePath = \"public/libraries/flot/tz\";\r\ntimezoneJS.timezone.defaultZoneFile = [];\r\ntimezoneJS.timezone.init();\r\n","$(document).ready(function() {\r\n\tif ($('.log').size() > 0) {\r\n\t\tvar graphDrawer = new LogstatsGraphDrawer('.log-graph-area', {\r\n\t\t\tenablePointHover: true,\r\n\t\t\tenableLineManipulation: false,\r\n\t\t\tenableSelectionZooming: false,\r\n\t\t\ttimezone: $(\"#data-holder\").attr(\"data-timezone\")\r\n\t\t});\r\n\t\tfunction load_records() {\r\n\t\t\tshow_loader();\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: \"GET\",\r\n\t\t\t\turl: $(\"form#get-records\").attr(\"action\"),\r\n\t\t\t\tdata: $(\"form#get-records\").serialize(), // serializes the form's elements.\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data.count == 0) {\r\n\t\t\t\t\t\t$(\".log-records\").html(\"No records found\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(\".log-records\").html(data.html);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttotalRecordCount = data.count;\r\n\t\t\t\t\tgenerate_page_numbers();\r\n\t\t\t\t\tconsole.log(data.graphData);\r\n\t\t\t\t\tif (data.graphData.data && data.graphData.data.length > 0) {\r\n\t\t\t\t\t\t$(\".log-graph\").show();\r\n\t\t\t\t\t\tgraphDrawer.draw(data.graphData.data, data.graphData.timeframe);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(\".log-graph\").hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\thide_loader();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction generate_page_numbers() {\r\n\t\t\tvar pageCount = Math.ceil(totalRecordCount / recordPerPage);\r\n\t\t\t$('.page-numbers ul').html('');\r\n\t\t\tfor (var i = 1; i <= pageCount; i++) {\r\n\t\t\t\tvar active = \"\";\r\n\t\t\t\tif (i == page) {\r\n\t\t\t\t\tactive = \"active\";\r\n\t\t\t\t}\r\n\t\t\t\t$('.page-numbers ul').append('<li class=\"'+active+'\" data-page=\"'+i+'\"><a href=\"\">'+i+'</a></li>');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction show_loader() {\r\n\t\t\t$(\"#loader\").show();\r\n\t\t}\r\n\r\n\t\tfunction hide_loader() {\r\n\t\t\t$(\"#loader\").hide();\r\n\t\t}\r\n\r\n\t\tfunction add_filter_row() {\r\n\t\t\tvar html = $(\"#example-filter-row\").html();\r\n\t\t\t$(\".filters\").append('<div id=\"'+filterId+'\">'+html+'</div>');\r\n\t\t\tvar row = $('div#'+filterId);\r\n\t\t\t$(\".property-name\", row).attr('name', 'filters['+filterId+'][property-name]');\r\n\t\t\t$(\".property-type\", row).attr('name', 'filters['+filterId+'][property-type]');\r\n\t\t\t$(\".comparison\", row).attr('name', 'filters['+filterId+'][comparison-type]');\r\n\t\t\t$(\".value\", row).attr('name', 'filters['+filterId+'][property-value]');\r\n\t\t\t$(\".remove-filter-row\", row).attr(\"data-id\", filterId);\r\n\t\t\t$('select[name=\"filters['+filterId+'][comparison-type]\"]').chained('select[name=\"filters['+filterId+'][property-type]\"]');\r\n\t\t\tfilterId++;\r\n\t\t}\r\n\r\n\t\tvar page = 1;\r\n\t\tvar totalRecordCount = 0;\r\n\t\tvar recordPerPage = 100;\r\n\t\tvar filterId = 1;\r\n\r\n\t\t$(\"form#get-records\").submit(function(e) {\r\n\t\t\t$(\"input[name='page']\").val('1');\r\n\t\t\tload_records();\r\n\t\t\te.preventDefault();\r\n\t\t})\r\n\r\n\t\t$(\".page-numbers\").on('click', 'li a', function(e) {\r\n\t\t\tpage = $(this).parent().attr('data-page');\r\n\t\t\t$('.page-numbers li').removeClass('active');\r\n\t\t\t$(this).parent().addClass('active');\r\n\t\t\t$('input[name=\"page\"]').val(page);\r\n\t\t\tload_records();\r\n\t\t\twindow.scrollTo(0,0);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\t$(\".add-filter\").click(function() {\r\n\t\t\t$(\".down-control\").show();\r\n\t\t});\r\n\r\n\t\t$(\"#add-filter-row\").click(add_filter_row);\r\n\t\t$(\".filters\").on('click', '.remove-filter-row', function() {\r\n\t\t\t$(\"div#\" + $(this).attr('data-id')).remove();\r\n\t\t});\r\n\r\n\t\tif($('div.log')) { // if log page\r\n\t\t\tadd_filter_row();\r\n\t\t\tload_records();\r\n\t\t}\r\n\r\n\t\t$(\"#export-csv\").click(function(e) {\r\n\t\t\twindow.location.href = $(this).attr('data-export-csv-url') + '?' + $('form#get-records').serialize();\r\n\t\t\t//e.preventDefault();\r\n\t\t\treturn false;\r\n\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t} // end of if\r\n});\r\n\r\n","$(document).ready(function() {\r\n\tif($('.segmentation').size() > 0) { // if segmentation page\r\n\r\n\t\tfunction reload_property_names(messageId) {\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: \"GET\",\r\n\t\t\t\turl: $(\".segmentation\").attr('data-property-names-url'),\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'message-id': messageId\r\n\t\t\t\t}, // serializes the form's elements.\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\t$('.property-options').html('');\r\n\t\t\t\t\t$('.property-options').append('<option>&nbsp;</option>');\r\n\t\t\t\t\t$.each(data, function(key, value) {\r\n\t\t\t\t\t\t$('.property-options').append('<option value=\"'+value+'\">'+value+'</option>');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction add_filter_row() {\r\n\t\t\tvar html = $(\"#example-filter-row\").html();\r\n\t\t\t$(\".filters\").append('<div id=\"'+filterId+'\">'+html+'</div>');\r\n\t\t\tvar row = $('div#'+filterId);\r\n\t\t\t$(\".property-name\", row).select2({placeholder:'Property name'});\r\n\t\t\t$(\".property-name\", row).attr('name', 'filters['+filterId+'][propertyName]');\r\n\t\t\t$(\".comparison\", row).attr('name', 'filters['+filterId+'][comparisonType]');\r\n\t\t\t$(\".value\", row).attr('name', 'filters['+filterId+'][propertyValue]');\r\n\t\t\t$(\".remove-filter-row\", row).attr(\"data-id\", filterId);\r\n\t\t\tfilterId++;\r\n\t\t}\r\n\r\n\t\tfunction show_loader() {\r\n\t\t\t$(\"#loader\").show();\r\n\t\t}\r\n\r\n\t\tfunction hide_loader() {\r\n\t\t\t$(\"#loader\").hide();\r\n\t\t}\r\n\r\n\t\tvar drawer = new LogstatsGraphDrawer('.graph-area', {\r\n\t\t\tenablePointHover: true,\r\n\t\t\tenableLineManipulation: true,\r\n\t\t\tenableSelectionZooming: true,\r\n\t\t\ttimezone: $(\"#data-holder\").attr(\"data-timezone\")\r\n\t\t});\r\n\t\tvar queryUrl = $(\"input[name='query-url']\").val();\r\n\t\tvar projectToken = $(\"input[name='project-token']\").val();\r\n\t\tvar eventPageCount = 30;\r\n\t\tvar displayedMessageLength = 100;\r\n\t\tvar filterId = 0;\r\n\r\n\t\t$(\"#query-form\").submit(function(e) {\r\n\t\t\t$(\"#export-image\").hide();\r\n\t\t\tshow_loader();\r\n\t\t\tvar query = $(this).serializeObject();\r\n\t\t\tif ($('select#event').val()) {\r\n\t\t\t\tvar split = $('select#event').val().split(',');\r\n\t\t\t\tquery.event = split[1];\r\n\t\t\t}\r\n\t\t\tif (typeof query.filters != \"undefined\") {\r\n\t\t\t\tquery.filters = $.grep(query.filters, function(value) {\r\n\t\t\t\t\treturn typeof value != \"undefined\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (query.interval == \"None\") {\r\n\t\t\t\tdelete query.interval;\r\n\t\t\t}\r\n\t\t\tvar logstatsQuery = new LogstatsQuery(queryUrl, projectToken);\r\n\t\t\tlogstatsQuery.get(query, function(data) {\r\n\t\t\t\tdrawer.draw(data.data, data.timeframe);\r\n\t\t\t\tif (drawer.isExportable()) {\r\n\t\t\t\t\t$(\"#export-image\").show();\r\n\t\t\t\t}\r\n\t\t\t\thide_loader();\r\n\t\t\t}, function(data) {\r\n\t\t\t\tvar errors = typeof data.responseJSON != \"undefined\" ? data.responseJSON : [\"Error while retrieving data\"];\r\n\t\t\t\tdrawer.displayErrors(errors);\r\n\t\t\t\thide_loader();\r\n\t\t\t});\r\n\t\t\te.preventDefault();\r\n\t\t});\r\n\r\n\t\t$(\"#export-image\").click(function() {\r\n\t\t\t$(\".graph\").css(\"background-color\", \"#fff\");\r\n\t\t\thtml2canvas($(\".graph\"), {\r\n\t\t\t\tonrendered: function(canvas) {\r\n\t\t\t\t\t$(\".graph\").css(\"background\", \"none\");\r\n\t\t\t\t\tconsole.log(canvas);\r\n\t\t\t\t\tvar image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");  // here is the most important part because if you dont replace you will get a DOM 18 exception.\r\n\t\t\t\t\twindow.location.href = image;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t$(\"select#event\").select2({\r\n\t\t\tajax: {\r\n\t\t\t\turl: $('select#event').attr('data-url'),\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdelay: 250,\r\n\t\t\t\tdata: function (params) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t'message-search': params.term, // search term\r\n\t\t\t\t\t\t'page': params.page,\r\n\t\t\t\t\t\t'page-count': eventPageCount,\r\n\t\t\t\t\t\t'project-id': $('input[name=\"project-id\"]').val(),\r\n\t\t\t\t\t\t'level': $('select[name=\"level\"]').val()\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tprocessResults: function (data, params) {\r\n\t\t\t\t\tparams.page = params.page || 1;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tresults: $.map(data.items, function (item, key) {\r\n\t\t\t\t\t\t\tvar message = item;\r\n\t\t\t\t\t\t\tif (message.length > displayedMessageLength) {\r\n\t\t\t\t\t\t\t\tmessage = message.substring(0, displayedMessageLength) + '...'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: message,\r\n\t\t\t\t\t\t\t\tslug: message,\r\n\t\t\t\t\t\t\t\tid: key + ',' + item // option value in format \"id,message\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tpagination: {\r\n\t\t\t\t\t\t\tmore: (params.page * 30) < data.total_count\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tcache: true\r\n\t\t\t},\r\n\t\t\tescapeMarkup: function (markup) { return markup; }, // let our custom formatter work\r\n\t\t\tminimumInputLength: 0,\r\n\t\t\tplaceholder: \"Choose event...\"\r\n\t\t\t//templateResult: formatRepo, // omitted for brevity, see the source of this page\r\n\t\t\t//templateSelection: formatRepoSelection // omitted for brevity, see the source of this page\r\n\t\t});\r\n\r\n\t\t$(\".group-by select\").select2({placeholder:'Property name', allowClear: true});\r\n\t\t$(\".target-property select\").select2({placeholder:'Property name'});\r\n\r\n\t\t$(\"select#event\").change(function() {\r\n\t\t\tvar split = $(\"select#event\").val().split(',');\r\n\t\t\t$(\"select[name='groupBy']\").select2(\"val\", \"\");\r\n\t\t\t$(\"select[name='targetProperty']\").select2(\"val\", \"\");\r\n\t\t\treload_property_names(split[0]);\r\n\t\t});\r\n\r\n\t\t$(\".aggregation select\").change(function() {\r\n\t\t\tif ($(this).val() == 'count') {\r\n\t\t\t\t$(\".target-property select\").attr('disabled', 'disabled');\r\n\t\t\t} else {\r\n\t\t\t\t$(\".target-property select\").removeAttr('disabled');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$(\".add-filter\").click(function() {\r\n\t\t\tadd_filter_row();\r\n\t\t\t$(\".down-control\").show();\r\n\t\t});\r\n\r\n\t\t$(\"#add-filter-row\").click(add_filter_row);\r\n\t\t$(\".filters\").on('click', '.remove-filter-row', function() {\r\n\t\t\t$(\"div#\" + $(this).attr('data-id')).remove();\r\n\t\t});\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n});","function LogstatsQuery(url, projectToken) {\r\n\tthis.url = url;\r\n\tthis.projectToken = projectToken;\r\n}\r\n\r\nLogstatsQuery.prototype.get = function(queryData, successFunction, errorFunction) {\r\n\t$.ajax({\r\n\t\ttype: \"GET\",\r\n\t\turl: this.url,\r\n\t\tdata: {\r\n\t\t\tquery: queryData,\r\n\t\t\tprojectToken: this.projectToken\r\n\t\t},\r\n\t\tsuccess: successFunction,\r\n\t\terror: errorFunction\r\n\t});\r\n}","/**\r\n * Class which converts raw logstats data to better-working-with associative data\r\n *\r\n * @param data logstats data\r\n * @param interval interval in which were data queried\r\n * @param timeframe timeframe object\r\n * @constructor\r\n */\r\nfunction LogstatsDataConverter(data, interval, timeframe) {\r\n\tthis.data = data;\r\n\tthis.interval = interval;\r\n\tthis.timeframe = timeframe;\r\n}\r\n\r\n/**\r\n * Get associative data for chart with more lines in this format:\r\n * groupByName.year.month.day.hour.minute = numberValue\r\n */\r\nLogstatsDataConverter.prototype.getMoreLinesAssociativeWithZeros = function () {\r\n\tvar emptyGroupAssocc = this.getEmptyGroupAssociativeData();\r\n\tvar groupAssocc = this.getGroupAssoc(emptyGroupAssocc);\r\n\treturn groupAssocc;\r\n}\r\n\r\n/**\r\n * Get associative data for chart with one lines in this format:\r\n * year.month.day.hour.minute = numberValue\r\n */\r\nLogstatsDataConverter.prototype.getOneLineAssociativeWithZeros = function() {\r\n\tvar emptyDateAssoc = this.getEmptyDateAssociativeData();\r\n\treturn this.getAssoc(emptyDateAssoc)\r\n}\r\n\r\n/**\r\n * Get all used group by names in current data\r\n */\r\nLogstatsDataConverter.prototype.getAllGroupByNames = function () {\r\n\tvar names = [];\r\n\tfor (i = 0; i < this.data.length; i++) {\r\n\t\tif (names.indexOf(this.data[i].group) == -1) { // value does not exist\r\n\t\t\tnames.push(this.data[i].group);\r\n\t\t}\r\n\t}\r\n\r\n\treturn names;\r\n};\r\n\r\n/**\r\n * Get empty associative data in this format\r\n * groupByName.year.month.day.hour.minute = 0\r\n */\r\nLogstatsDataConverter.prototype.getEmptyGroupAssociativeData = function() {\r\n\tvar names = this.getAllGroupByNames();\r\n\tvar data = {};\r\n\tfor (var i = 0; i < names.length; i++) {\r\n\t\tvar emptyDateData = this.getEmptyDateAssociativeData();\r\n\t\tdata[names[i]] = emptyDateData;\r\n\t}\r\n\treturn data;\r\n}\r\n\r\n/**\r\n * Get empty associative data in this format\r\n * year.month.day.hour.minute = 0\r\n */\r\nLogstatsDataConverter.prototype.getEmptyDateAssociativeData = function() {\r\n\tvar startDate = this.getStartDate();\r\n\tvar endDate = this.getEndDate();\r\n\tvar currentDate = startDate;\r\n\tvar dateData = {};\r\n\twhile (currentDate.isBefore(endDate)) {\r\n\t\tthis.initializeDateDate(dateData, currentDate);\r\n\t\tdateData[currentDate.year()][currentDate.month()][currentDate.date()][currentDate.hour()][currentDate.minute()] = 0;\r\n\t\tthis.incrementDate(currentDate);\r\n\t}\r\n\treturn dateData;\r\n}\r\n\r\n/**\r\n * Get start date from timeframe or data\r\n */\r\nLogstatsDataConverter.prototype.getStartDate = function() {\r\n\tvar startDate;\r\n\tif (typeof this.timeframe != \"undefined\") {\r\n\t\tstartDate = this.roundDateDown(moment(this.timeframe.from, \"X\").tz('GMT'));\r\n\t} else {\r\n\t\tvar date = this.data[0];\r\n\t\tstartDate = moment.tz({ year :date.year, month :date.month - 1, day :date.day, hour :date.hour, minute :date.minute}, 'GMT');\r\n\t}\r\n\treturn startDate;\r\n}\r\n\r\n/**\r\n * Round date according to interval\r\n * @param date\r\n */\r\nLogstatsDataConverter.prototype.roundDateDown = function(date) {\r\n\tdate.second(0);\r\n\tif (this.interval == \"minutely\") {\r\n\t\treturn date\r\n\t}\r\n\tdate.minute(0);\r\n\tif (this.interval == \"hourly\") {\r\n\t\treturn date;\r\n\t}\r\n\tdate.hours(0);\r\n\tif (this.interval == \"daily\") {\r\n\t\treturn date;\r\n\t}\r\n\tdate.date(1);\r\n\tif (this.interval == \"monthly\") {\r\n\t\treturn date;\r\n\t}\r\n\tdate.month(0);\r\n\treturn date;\r\n}\r\n\r\n/**\r\n * Get end date from timeframe or data\r\n */\r\nLogstatsDataConverter.prototype.getEndDate = function() {\r\n\tvar endDate;\r\n\tif (typeof this.timeframe != \"undefined\") {\r\n\t\tendDate = moment(this.timeframe.to, \"X\").tz('GMT');\r\n\t} else {\r\n\t\tvar date = this.data[this.data.length - 1];\r\n\t\tendDate = moment.tz({ year :date.year, month :date.month - 1, day :date.day, hour :date.hour, minute :date.minute}, 'GMT');\r\n\t}\r\n\treturn endDate;\r\n}\r\n\r\n/**\r\n * Increment date according to interval\r\n */\r\nLogstatsDataConverter.prototype.incrementDate = function(date) {\r\n\tif (this.interval == \"minutely\") {\r\n\t\tdate.add(1, 'm');\r\n\t}\r\n\tif (this.interval == \"hourly\") {\r\n\t\tdate.add(1, 'h');\r\n\t}\r\n\tif (this.interval == \"daily\") {\r\n\t\tdate.add(1, 'd');\r\n\t}\r\n\tif (this.interval == \"monthly\") {\r\n\t\tdate.add(1, 'M');\r\n\t}\r\n\tif (this.interval == \"yearly\") {\r\n\t\tdate.add(1, 'y');\r\n\t}\r\n\r\n\treturn date;\r\n}\r\n\r\n/**\r\n * Initialize empty objects for date to avoid writing to not set keys\r\n *\r\n * @param dateData\r\n * @param currentDate\r\n */\r\nLogstatsDataConverter.prototype.initializeDateDate = function(dateData, currentDate) {\r\n\tif (typeof dateData[currentDate.year()] == \"undefined\") {\r\n\t\tdateData[currentDate.year()] = {};\r\n\t}\r\n\tif (typeof dateData[currentDate.year()][currentDate.month()] == \"undefined\") {\r\n\t\tdateData[currentDate.year()][currentDate.month()] = {};\r\n\t}\r\n\tif (typeof dateData[currentDate.year()][currentDate.month()][currentDate.date()] == \"undefined\") {\r\n\t\tdateData[currentDate.year()][currentDate.month()][currentDate.date()] = {};\r\n\t}\r\n\tif (typeof dateData[currentDate.year()][currentDate.month()][currentDate.date()][currentDate.hour()] == \"undefined\") {\r\n\t\tdateData[currentDate.year()][currentDate.month()][currentDate.date()][currentDate.hour()] = {};\r\n\t}\r\n\tif (typeof dateData[currentDate.year()][currentDate.month()][currentDate.date()][currentDate.hour()][currentDate.minute()]== \"undefined\") {\r\n\t\tdateData[currentDate.year()][currentDate.month()][currentDate.date()][currentDate.hour()][currentDate.minute()] = {};\r\n\t}\r\n}\r\n\r\n/**\r\n * Add values to empty data in this format\r\n * groupByName.year.month.day.hour.minute = 0\r\n * and return data in this format\r\n * groupByName.year.month.day.hour.minute = value\r\n */\r\nLogstatsDataConverter.prototype.getGroupAssoc = function(emptyGroupAssoc) {\r\n\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\tvar row = this.data[i];\r\n\t\tvar group = row.group;\r\n\t\tvar year = row.year\r\n\t\tvar month = typeof row.month != \"undefined\" ? row.month : 1;\r\n\t\tvar day = typeof row.day != \"undefined\" ? row.day : 1;\r\n\t\tvar hour = typeof row.hour != \"undefined\" ? row.hour : 0;\r\n\t\tvar minute = typeof row.minute != \"undefined\" ? row.minute : 0;\r\n\t\temptyGroupAssoc[group][year][month - 1][day][hour][minute] = row.value;\r\n\t}\r\n\r\n\treturn emptyGroupAssoc;\r\n}\r\n\r\n/**\r\n * Add values to empty data in this format\r\n * year.month.day.hour.minute = 0\r\n * and return data in this format\r\n * year.month.day.hour.minute = value\r\n */\r\nLogstatsDataConverter.prototype.getAssoc = function(emptyAssoc) {\r\n\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\tvar row = this.data[i];\r\n\t\tvar year = row.year\r\n\t\tvar month = typeof row.month != \"undefined\" ? row.month : 1;\r\n\t\tvar day = typeof row.day != \"undefined\" ? row.day : 1;\r\n\t\tvar hour = typeof row.hour != \"undefined\" ? row.hour : 0;\r\n\t\tvar minute = typeof row.minute != \"undefined\" ? row.minute : 0;\r\n\t\temptyAssoc[year][month - 1][day][hour][minute] = row.value;\r\n\t}\r\n\r\n\treturn emptyAssoc;\r\n}\r\n\r\n\r\n","/**\r\n * @param selector jquery selector where to draw graph\r\n * @param options (timezone,enablePointHover,eneableSelectionZooming,enableTimeManipulation)\r\n * @constructor\r\n */\r\nfunction LogstatsGraphDrawer(selector, options) {\r\n\tthis.selector = selector;\r\n\tthis.currentShowedData = [];\r\n\tthis.options = typeof options != \"undefined\" ? options : [];\r\n\tthis.flotLineOptions = this.getFlotLineOptions();\r\n\r\n\tif (this.options.enablePointHover) {\r\n\t\tthis.enableFlotHover();\r\n\t}\r\n\r\n\tif (this.options.enableSelectionZooming) {\r\n\t\tthis.enableSelectionZooming();\r\n\t}\r\n}\r\n\r\n/**\r\n * Draw chart\r\n *\r\n * @param data Data in logstats format\r\n * @param timeframe Timeframe object in which to display data\r\n * \t\t\t(timeframe.from, timefram.to in timestamp)\r\n */\r\nLogstatsGraphDrawer.prototype.draw = function(data, timeframe) {\r\n\tthis.logstatsData = data;\r\n\tthis.timeframe = timeframe;\r\n\tthis.interval = this.determineInterval();\r\n\tthis.groupBySet = this.determineGroupBy();\r\n\tthis.graphType = this.determineBestGraphType();\r\n\tthis.clearGraph();\r\n\r\n\tif (!this.validDataCount()) {\r\n\t\tthis.displayErrors(['Too much datapoints to display. Please choose larger interval or smaller timeframe']);\r\n\t\treturn;\r\n\t}\r\n\r\n\tswitch (this.graphType) {\r\n\t\tcase GraphType.NO_DATA:\r\n\t\t\tthis.drawNoData();\r\n\t\t\tbreak;\r\n\t\tcase GraphType.ONE_VALUE:\r\n\t\t\tthis.drawOneValue();\r\n\t\t\tbreak;\r\n\t\tcase GraphType.BAR:\r\n\t\t\tthis.drawBar();\r\n\t\t\tbreak;\r\n\t\tcase GraphType.ONE_LINE:\r\n\t\t\tthis.drawOneLine();\r\n\t\t\tbreak;\r\n\t\tcase GraphType.MULITPLE_LINES:\r\n\t\t\tthis.drawMultipleLines();\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n/**\r\n * Prepare graph area for new display\r\n */\r\nLogstatsGraphDrawer.prototype.clearGraph = function() {\r\n\t$(\".graph-checkboxes\").html(\"\");\r\n\t$(this.selector).removeClass(\"graph-one-value-container\");\r\n}\r\n\r\n/**\r\n * Display that no data has been found\r\n */\r\nLogstatsGraphDrawer.prototype.drawNoData = function() {\r\n\tthis.displayErrors(['No data found by given query'])\r\n}\r\n\r\n/**\r\n * Display errors\r\n *\r\n * @param array errors\r\n */\r\nLogstatsGraphDrawer.prototype.displayErrors = function(errors) {\r\n\tself = this;\r\n\t$(this.selector).html(\"<div class='bg-danger errors message-div'><ul class='list-unstyled'></ul></div>\");\r\n\t$.each(errors, function(key, error) {\r\n\t\t$(\"ul\", $(self.selector)).append('<li>'+error+'</li>');\r\n\t});\r\n}\r\n\r\n/**\r\n * Display only one (number) value\r\n */\r\nLogstatsGraphDrawer.prototype.drawOneValue = function() {\r\n\tvar value = this.logstatsData[0].value;\r\n\t$(this.selector).html(\"<div class='graph-one-value'>Result: \"+value+\"</div>\");\r\n\t$(this.selector).addClass(\"graph-one-value-container\");\r\n}\r\n\r\n/**\r\n * Draw bar chart\r\n */\r\nLogstatsGraphDrawer.prototype.drawBar = function() {\r\n\tvar data = this.getFlotBarData();\r\n\tthis.flot = $.plot(this.selector, data, this.getFlotBarOptions());\r\n}\r\n\r\n/**\r\n * Draw bar chart with one line\r\n */\r\nLogstatsGraphDrawer.prototype.drawOneLine = function() {\r\n\tvar data = this.getFlotOneLineData();\r\n\tthis.currentShowedData = data;\r\n\tthis.flot = $.plot(this.selector, data, this.flotLineOptions);\r\n}\r\n\r\n/**\r\n * Draw chart with multiple lines\r\n */\r\nLogstatsGraphDrawer.prototype.drawMultipleLines = function() {\r\n\tvar multiLineAssocData = this.getMultipleLineAssociativeDataWithZeros();\r\n\tvar data = this.getFlotMultiLineData(multiLineAssocData);\r\n\tthis.currentShowedData = data;\r\n\tif (this.options.enableLineManipulation) {\r\n\t\tthis.showCheckboxes();\r\n\t\tthis.enableLineManipulation();\r\n\t}\r\n\tthis.flot = $.plot(this.selector, data, this.flotLineOptions);\r\n}\r\n\r\n/**\r\n * Get complet data for all lines in flot format\r\n *\r\n * @param multiLineAssocData associative data which contain values to display, in this format:\r\n * \t\tgroupByName.year.month.day.hour.minute = value\r\n * @returns {Array}\r\n */\r\nLogstatsGraphDrawer.prototype.getFlotMultiLineData = function(multiLineAssocData) {\r\n\tvar self = this;\r\n\tvar flotData = [];\r\n\tvar colorNumber = 0;\r\n\t$.each(multiLineAssocData, function(groupName, groupAssoc) {\r\n\t\tflotData.push({\r\n\t\t\tlabel: groupName,\r\n\t\t\tdata: self.getFlotDateData(groupAssoc),\r\n\t\t\tclickable: true,\r\n\t\t\thoverable: true,\r\n\t\t\tshadowSize: 2,\r\n\t\t\tcolor: colorNumber++\r\n\t\t});\r\n\t});\r\n\treturn flotData;\r\n}\r\n\r\n/**\r\n * Get data in flot format for one line\r\n * Returned data are in this format: [[timestamp,value],[timestamp,value],...]\r\n *\r\n * @param data associative data for dates (without group by names)\r\n * @returns {Array}\r\n */\r\nLogstatsGraphDrawer.prototype.getFlotDateData = function(data) {\r\n\tvar returnData = [];\r\n\t$.each(data, function(yearName, yearAssoc) {\r\n\t\t$.each(yearAssoc, function(monthName, monthAssoc) {\r\n\t\t\t$.each(monthAssoc, function(dayName, dayAssoc) {\r\n\t\t\t\t$.each(dayAssoc, function(hourName, hourAssoc) {\r\n\t\t\t\t\t$.each(hourAssoc, function(minuteName, value) {\r\n\t\t\t\t\t\tvar microTimestamp = moment.tz({year:yearName, month: monthName, day:dayName, hour:hourName, minute:minuteName}, 'GMT').unix() * 1000;\r\n\t\t\t\t\t\treturnData.push([microTimestamp, value]);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\treturn returnData;\r\n}\r\n\r\n/**\r\n * Get associative data in this format:\r\n * groupByName.year.month.day.hour.minute = value\r\n */\r\nLogstatsGraphDrawer.prototype.getMultipleLineAssociativeDataWithZeros = function() {\r\n\tvar zeroAdder = new LogstatsDataConverter(this.logstatsData, this.interval, this.timeframe);\r\n\treturn zeroAdder.getMoreLinesAssociativeWithZeros();\r\n}\r\n\r\n/**\r\n * Get complet data in flot format\r\n */\r\nLogstatsGraphDrawer.prototype.getFlotOneLineData = function() {\r\n\tvar zeroAdder = new LogstatsDataConverter(this.logstatsData, this.interval, this.timeframe);\r\n\tvar data = zeroAdder.getOneLineAssociativeWithZeros();\r\n\treturn [{\r\n\t\tdata: this.getFlotDateData(data),\r\n\t\tlabel: 'Result',\r\n\t\tclickable: true,\r\n\t\thoverable: true,\r\n\t\tshadowSize: 2,\r\n\t\tcolor: $(\"#data-holder\").css('color')\r\n\t}];\r\n}\r\n\r\n/**\r\n * Get complet data in flot format for bar chart\r\n */\r\nLogstatsGraphDrawer.prototype.getFlotBarData = function() {\r\n\tvar data = [];\r\n\t$.each(this.logstatsData, function(key, value) {\r\n\t\tdata.push([key, value.value]);\r\n\t});\r\n\r\n\treturn [{\r\n\t\tlabel: 'Result',\r\n\t\tdata: data,\r\n\t\tclickable: true,\r\n\t\thoverable: true,\r\n\t\tcolor: $(\"#data-holder\").css('color')\r\n\t}];\r\n}\r\n\r\n/**\r\n * Determine which graph type is best for current data\r\n */\r\nLogstatsGraphDrawer.prototype.determineBestGraphType = function() {\r\n\tif (this.logstatsData.length == 0) {\r\n\t\treturn GraphType.NO_DATA;\r\n\t}\r\n\r\n\tif (typeof this.interval == \"undefined\" && !this.groupBySet) {\r\n\t\treturn GraphType.ONE_VALUE;\r\n\t}\r\n\r\n\tif (typeof this.interval != \"undefined\" && this.groupBySet) {\r\n\t\treturn GraphType.MULITPLE_LINES;\r\n\t}\r\n\r\n\tif (typeof this.interval == \"undefined\") {\r\n\t\treturn GraphType.BAR;\r\n\t}\r\n\treturn GraphType.ONE_LINE;\r\n}\r\n\r\n/**\r\n * Determine which interval was used to receive current data\r\n */\r\nLogstatsGraphDrawer.prototype.determineInterval = function() {\r\n\tif (this.logstatsData.length == 0) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar value = this.logstatsData[0];\r\n\tif (typeof value.minute != \"undefined\") {\r\n\t\treturn \"minutely\";\r\n\t}\r\n\tif (typeof value.hour != \"undefined\") {\r\n\t\treturn \"hourly\"\r\n\t}\r\n\tif (typeof value.day != \"undefined\") {\r\n\t\treturn \"daily\"\r\n\t}\r\n\tif (typeof value.month != \"undefined\") {\r\n\t\treturn \"monthly\"\r\n\t}\r\n\tif (typeof value.year != \"undefined\") {\r\n\t\treturn \"yearly\"\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Determine whether group by function was used to retreive current data\r\n */\r\nLogstatsGraphDrawer.prototype.determineGroupBy = function() {\r\n\tif (this.logstatsData.length == 0) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar value = this.logstatsData[0];\r\n\treturn (typeof value.group != \"undefined\");\r\n}\r\n\r\n/**\r\n * Enable to hover over flot points and to display value in that point\r\n */\r\nLogstatsGraphDrawer.prototype.enableFlotHover = function() {\r\n\tvar self = this;\r\n\t$(this.selector).bind(\"plothover\", function (event, pos, item) {\r\n\t\tif (item) {\r\n\t\t\tif (item.datapoint[0] > 1000) { // is date\r\n\t\t\t\tupper = self.getDateInFormat(moment(item.datapoint[0].toFixed(2),'x')) + \"<br>\";\r\n\t\t\t} else {\r\n\t\t\t\tupper = '';\r\n\t\t\t}\r\n\t\t\tvar value = item.datapoint[1].toFixed(2),\r\n\t\t\t\tlabel = item.series.label;\r\n\r\n\t\t\t$(\".graph-tooltip\").html(upper  + label + \" : \" + value)\r\n\t\t\t\t.css({top: item.pageY+5, left: item.pageX+5})\r\n\t\t\t\t.show();\r\n\t\t} else {\r\n\t\t\t$(\".graph-tooltip\").hide();\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Display given time in format which is best for current interval\r\n * @param moment time\r\n */\r\nLogstatsGraphDrawer.prototype.getDateInFormat = function(moment) {\r\n\tif (this.interval == \"yearly\") {\r\n\t\treturn moment.tz(this.options.timezone).format('YYYY');\r\n\t}\r\n\tif (this.interval == \"monthly\") {\r\n\t\treturn moment.tz(this.options.timezone).format('MMMM YYYY');\r\n\t}\r\n\tif (this.interval == \"daily\") {\r\n\t\treturn moment.tz(this.options.timezone).format('MMMM Do YYYY');\r\n\t}\r\n\tif (this.interval == \"hourly\") {\r\n\t\treturn moment.tz(this.options.timezone).format('MMMM Do YYYY, H:mm');\r\n\t}\r\n\r\n\treturn moment.tz(this.options.timezone).format('MMMM Do YYYY, H:mm');\r\n}\r\n\r\n/**\r\n * Enable remove lines from graph with checkboxes\r\n */\r\nLogstatsGraphDrawer.prototype.enableLineManipulation = function() {\r\n\tvar self = this;\r\n\t$(\".graph-checkboxes input\").click(function() {\r\n\t\tvar data = [];\r\n\r\n\t\t$(\".graph-checkboxes input:checked\").each(function () {\r\n\t\t\tvar key = $(this).attr(\"name\");\r\n\t\t\tif (key !== false && self.currentShowedData[key]) {\r\n\t\t\t\tdata.push(self.currentShowedData[key]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (data.length > 0) {\r\n\t\t\t//self.flot = $.plot(self.selector, data, self.flotOptions);\r\n\t\t\tself.flot.setData(data);\r\n\t\t\tself.flot.draw();\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Display checkboxes for line manipulation\r\n */\r\nLogstatsGraphDrawer.prototype.showCheckboxes = function() {\r\n\t$(\".graph-checkboxes\").html(\"\");\r\n\t$.each(this.currentShowedData, function(key, value) {\r\n\t\t$(\".graph-checkboxes\").append(\"<input type='checkbox' name='\" + key +\r\n\t\t\"' checked='checked' id='id\" + key + \"'></input>\" +\r\n\t\t\"<label for='id\" + key + \"'>\"\r\n\t\t+ value.label + \"</label>\");\r\n\t});\r\n}\r\n\r\n/**\r\n * Enable chart zooming with seleciton\r\n */\r\nLogstatsGraphDrawer.prototype.enableSelectionZooming = function() {\r\n\tvar self = this;\r\n\t$(this.selector).bind(\"plotselected\", function (event, ranges) {\r\n\t\t$.each(self.flot.getXAxes(), function(_, axis) {\r\n\t\t\tvar opts = axis.options;\r\n\t\t\topts.min = ranges.xaxis.from;\r\n\t\t\topts.max = ranges.xaxis.to;\r\n\t\t});\r\n\t\tself.flot.setupGrid();\r\n\t\tself.flot.draw();\r\n\t\tself.flot.clearSelection();\r\n\t});\r\n}\r\n\r\n/**\r\n * Get flot options for line chart\r\n */\r\nLogstatsGraphDrawer.prototype.getFlotLineOptions = function() {\r\n\tvar options =  {\r\n\t\tseries: {\r\n\t\t\tlines: {show: true},\r\n\t\t\tpoints: {show: true}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tclickable: true,\r\n\t\t\thoverable: true,\r\n\t\t\tautoHighlight: true\r\n\t\t},\r\n\t\txaxis: {\r\n\t\t\tmode: \"time\",\r\n\t\t\ttimezone: this.options.timezone\r\n\t\t}\r\n\t}\r\n\r\n\tif (this.options.enableSelectionZooming) {\r\n\t\toptions.selection = {\r\n\t\t\tmode: \"x\"\r\n\t\t}\r\n\t}\r\n\r\n\treturn options;\r\n}\r\n\r\n/**\r\n * Get flot options for bar chart\r\n */\r\nLogstatsGraphDrawer.prototype.getFlotBarOptions = function() {\r\n\tvar ticks = [];\r\n\r\n\t$.each(this.logstatsData, function(key, value) {\r\n\t\tticks.push([key,value.group]);\r\n\t});\r\n\r\n\treturn {\r\n\t\tseries: {\r\n\t\t\tlines: {show: false},\r\n\t\t\tbars: { show: true },\r\n\t\t\tpoints: {show: false}\r\n\t\t},\r\n\t\tbars: {\r\n\t\t\talign: 'center',\r\n\t\t\tbarWidth: 0.5\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tclickable: true,\r\n\t\t\thoverable: true,\r\n\t\t\tautoHighlight: true\r\n\t\t},\r\n\t\txaxis: {\r\n\t\t\tticks: ticks\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Determine whether there is not too much data points to display for current data\r\n * @returns {boolean}\r\n */\r\nLogstatsGraphDrawer.prototype.validDataCount = function() {\r\n\tif (!this.timeframe || !this.interval)\r\n\t\treturn true;\r\n\tvar minutesToDisplay = (this.timeframe.to - this.timeframe.from) / 60;\r\n\tvar step = this.getStepFromInterval(this.interval);\r\n\r\n\tconst MAX_INTERVAL_POINTS_TO_DISPLAY = 50000;\r\n\treturn minutesToDisplay / step < MAX_INTERVAL_POINTS_TO_DISPLAY;\r\n}\r\n\r\nLogstatsGraphDrawer.prototype.getStepFromInterval = function(interval) {\r\n\tvar step = 1;\r\n\r\n\tif (interval == \"minutely\") {\r\n\t\treturn step;\r\n\t}\r\n\r\n\tstep *= 60;\r\n\tif (interval == \"hourly\") {\r\n\t\treturn step;\r\n\t}\r\n\r\n\tstep *= 24;\r\n\tif (interval == \"daily\") {\r\n\t\treturn step;\r\n\t}\r\n\r\n\tstep *= 30;\r\n\tif (interval == \"monthly\") {\r\n\t\treturn step;\r\n\t}\r\n\r\n\tstep *= 12;\r\n\treturn step;\r\n}\r\n\r\nLogstatsGraphDrawer.prototype.isExportable = function() {\r\n\treturn this.graphType != GraphType.NO_DATA;\r\n}\r\n\r\nvar GraphType = {\r\n\tNO_DATA : \"no data\",\r\n\tBAR: \"bar\",\r\n\tONE_VALUE: \"one value\",\r\n\tONE_LINE: \"one line\",\r\n\tMULITPLE_LINES: \"mulitple lines\"\r\n}","$(document).ready(function() {\r\n\tif ($('.dataManagement').size() > 0) {\r\n\r\n\t}\r\n});","$(document).ready(function() {\r\n\t$(\".delete-project\").click(function() {\r\n\t\tvar projectName = $(this).attr('data-project-name');\r\n\t\tif (confirm(\"Do you really want to delete project: \" + projectName + \"? All records will be lost\")) {\r\n\t\t\t$(this).parent('form').submit();\r\n\t\t}\r\n\t});\r\n});\r\n\r\n"],"sourceRoot":"/source/"}